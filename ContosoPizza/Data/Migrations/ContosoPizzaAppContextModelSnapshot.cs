// <auto-generated />
using ContosoPizza.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContosoPizza.Data.Migrations
{
    [DbContext(typeof(ContosoPizzaAppContext))]
    partial class ContosoPizzaAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContosoPizza.Models.Ingredientes", b =>
                {
                    b.Property<int>("IdIngredient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIngredient"));

                    b.Property<bool>("IsGlutenFree")
                        .HasColumnType("bit");

                    b.Property<string>("NameIngredient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdIngredient");

                    b.HasIndex("PizzaId");

                    b.ToTable("Ingredientes");

                    b.HasData(
                        new
                        {
                            IdIngredient = 1,
                            IsGlutenFree = true,
                            NameIngredient = "Salsa de Tomate",
                            PizzaId = 1,
                            Price = 0.5m
                        },
                        new
                        {
                            IdIngredient = 2,
                            IsGlutenFree = true,
                            NameIngredient = "Queso Mozzarella",
                            PizzaId = 1,
                            Price = 1.0m
                        },
                        new
                        {
                            IdIngredient = 3,
                            IsGlutenFree = true,
                            NameIngredient = "Albahaca",
                            PizzaId = 1,
                            Price = 0.3m
                        },
                        new
                        {
                            IdIngredient = 4,
                            IsGlutenFree = false,
                            NameIngredient = "Jamón",
                            PizzaId = 2,
                            Price = 1.2m
                        },
                        new
                        {
                            IdIngredient = 5,
                            IsGlutenFree = true,
                            NameIngredient = "Piña",
                            PizzaId = 2,
                            Price = 0.8m
                        },
                        new
                        {
                            IdIngredient = 6,
                            IsGlutenFree = true,
                            NameIngredient = "Hongos",
                            PizzaId = 3,
                            Price = 0.6m
                        },
                        new
                        {
                            IdIngredient = 7,
                            IsGlutenFree = true,
                            NameIngredient = "Alcachofas",
                            PizzaId = 3,
                            Price = 0.7m
                        },
                        new
                        {
                            IdIngredient = 8,
                            IsGlutenFree = true,
                            NameIngredient = "Aceitunas",
                            PizzaId = 3,
                            Price = 0.5m
                        },
                        new
                        {
                            IdIngredient = 9,
                            IsGlutenFree = false,
                            NameIngredient = "Carne de Res",
                            PizzaId = 4,
                            Price = 1.5m
                        },
                        new
                        {
                            IdIngredient = 10,
                            IsGlutenFree = true,
                            NameIngredient = "Salsa Barbacoa",
                            PizzaId = 4,
                            Price = 0.9m
                        },
                        new
                        {
                            IdIngredient = 11,
                            IsGlutenFree = true,
                            NameIngredient = "Queso Vegano",
                            PizzaId = 5,
                            Price = 2.0m
                        },
                        new
                        {
                            IdIngredient = 12,
                            IsGlutenFree = true,
                            NameIngredient = "Pimiento",
                            PizzaId = 5,
                            Price = 0.4m
                        },
                        new
                        {
                            IdIngredient = 13,
                            IsGlutenFree = true,
                            NameIngredient = "Cebolla Morada",
                            PizzaId = 5,
                            Price = 0.3m
                        },
                        new
                        {
                            IdIngredient = 14,
                            IsGlutenFree = true,
                            NameIngredient = "Calabacín",
                            PizzaId = 5,
                            Price = 0.45m
                        });
                });

            modelBuilder.Entity("ContosoPizza.Models.PedidoPizza", b =>
                {
                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("PedidoId", "PizzaId");

                    b.HasIndex("PizzaId");

                    b.ToTable("PedidoPizza");

                    b.HasData(
                        new
                        {
                            PedidoId = 1,
                            PizzaId = 1
                        },
                        new
                        {
                            PedidoId = 1,
                            PizzaId = 2
                        },
                        new
                        {
                            PedidoId = 2,
                            PizzaId = 1
                        });
                });

            modelBuilder.Entity("ContosoPizza.Models.Pedidos", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPedido");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            IdPedido = 1,
                            Price = 100.00m
                        },
                        new
                        {
                            IdPedido = 2,
                            Price = 150.00m
                        });
                });

            modelBuilder.Entity("ContosoPizza.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Margherita",
                            Price = 8.50m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hawaiana",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cuatro Estaciones",
                            Price = 10.75m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Barbacoa",
                            Price = 11.25m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Vegana",
                            Price = 12.00m
                        });
                });

            modelBuilder.Entity("ContosoPizza.Models.Ingredientes", b =>
                {
                    b.HasOne("ContosoPizza.Models.Pizza", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContosoPizza.Models.PedidoPizza", b =>
                {
                    b.HasOne("ContosoPizza.Models.Pedidos", "Pedido")
                        .WithMany("PedidoPizzas")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoPizza.Models.Pizza", "Pizza")
                        .WithMany("PedidoPizzas")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("ContosoPizza.Models.Pedidos", b =>
                {
                    b.Navigation("PedidoPizzas");
                });

            modelBuilder.Entity("ContosoPizza.Models.Pizza", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("PedidoPizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
