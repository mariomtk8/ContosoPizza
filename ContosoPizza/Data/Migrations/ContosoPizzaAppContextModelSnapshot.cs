// <auto-generated />
using System;
using ContosoPizza.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContosoPizza.Data.Migrations
{
    [DbContext(typeof(ContosoPizzaAppContext))]
    partial class ContosoPizzaAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContosoPizza.Models.Ingredientes", b =>
                {
                    b.Property<int>("IdIngredient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIngredient"));

                    b.Property<bool>("IsGlutenFree")
                        .HasColumnType("bit");

                    b.Property<string>("NameIngredient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdIngredient");

                    b.HasIndex("PizzaId");

                    b.ToTable("Ingredientes");

                    b.HasData(
                        new
                        {
                            IdIngredient = 1,
                            IsGlutenFree = true,
                            NameIngredient = "Tomate",
                            PizzaId = 1,
                            Price = 0.22m
                        },
                        new
                        {
                            IdIngredient = 2,
                            IsGlutenFree = false,
                            NameIngredient = "Prosciutto",
                            PizzaId = 1,
                            Price = 1.3m
                        },
                        new
                        {
                            IdIngredient = 3,
                            IsGlutenFree = true,
                            NameIngredient = "Queso Parmesano",
                            PizzaId = 1,
                            Price = 2.5m
                        },
                        new
                        {
                            IdIngredient = 4,
                            IsGlutenFree = true,
                            NameIngredient = "Aceite de Oliva",
                            PizzaId = 1,
                            Price = 3.0m
                        },
                        new
                        {
                            IdIngredient = 5,
                            IsGlutenFree = true,
                            NameIngredient = "Tomate",
                            PizzaId = 2,
                            Price = 0.22m
                        },
                        new
                        {
                            IdIngredient = 6,
                            IsGlutenFree = true,
                            NameIngredient = "Espinaca",
                            PizzaId = 2,
                            Price = 0.3m
                        },
                        new
                        {
                            IdIngredient = 7,
                            IsGlutenFree = true,
                            NameIngredient = "Champiñones",
                            PizzaId = 2,
                            Price = 0.25m
                        },
                        new
                        {
                            IdIngredient = 8,
                            IsGlutenFree = true,
                            NameIngredient = "Tomate",
                            PizzaId = 3,
                            Price = 0.22m
                        },
                        new
                        {
                            IdIngredient = 9,
                            IsGlutenFree = false,
                            NameIngredient = "Pepperoni",
                            PizzaId = 3,
                            Price = 1.5m
                        },
                        new
                        {
                            IdIngredient = 10,
                            IsGlutenFree = true,
                            NameIngredient = "Oregano",
                            PizzaId = 3,
                            Price = 0.1m
                        },
                        new
                        {
                            IdIngredient = 11,
                            IsGlutenFree = true,
                            NameIngredient = "Tomate",
                            PizzaId = 4,
                            Price = 0.22m
                        },
                        new
                        {
                            IdIngredient = 12,
                            IsGlutenFree = true,
                            NameIngredient = "Queso Mozzarella",
                            PizzaId = 4,
                            Price = 2.0m
                        },
                        new
                        {
                            IdIngredient = 13,
                            IsGlutenFree = true,
                            NameIngredient = "Queso Cheddar",
                            PizzaId = 4,
                            Price = 1.5m
                        },
                        new
                        {
                            IdIngredient = 14,
                            IsGlutenFree = true,
                            NameIngredient = "Queso Gouda",
                            PizzaId = 4,
                            Price = 1.8m
                        },
                        new
                        {
                            IdIngredient = 15,
                            IsGlutenFree = true,
                            NameIngredient = "Queso Brie",
                            PizzaId = 4,
                            Price = 2.2m
                        },
                        new
                        {
                            IdIngredient = 16,
                            IsGlutenFree = true,
                            NameIngredient = "Queso Roquefort",
                            PizzaId = 4,
                            Price = 3.5m
                        },
                        new
                        {
                            IdIngredient = 17,
                            IsGlutenFree = true,
                            NameIngredient = "Queso Gruyere",
                            PizzaId = 4,
                            Price = 2.6m
                        },
                        new
                        {
                            IdIngredient = 18,
                            IsGlutenFree = true,
                            NameIngredient = "Queso Emmental",
                            PizzaId = 4,
                            Price = 2.3m
                        });
                });

            modelBuilder.Entity("ContosoPizza.Models.Pedidos", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrder"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdOrder");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("ContosoPizza.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PedidosIdOrder")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PedidosIdOrder");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Classic Italian",
                            Price = 7.02m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vegetariana",
                            Price = 6.77m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pepperoni",
                            Price = 9.12m
                        },
                        new
                        {
                            Id = 4,
                            Name = "8 Quesos",
                            Price = 10.50m
                        });
                });

            modelBuilder.Entity("ContosoPizza.Models.Ingredientes", b =>
                {
                    b.HasOne("ContosoPizza.Models.Pizza", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContosoPizza.Models.Pizza", b =>
                {
                    b.HasOne("ContosoPizza.Models.Pedidos", null)
                        .WithMany("Pizzas")
                        .HasForeignKey("PedidosIdOrder");
                });

            modelBuilder.Entity("ContosoPizza.Models.Pedidos", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("ContosoPizza.Models.Pizza", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
